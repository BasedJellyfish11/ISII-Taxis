@page "/modifytaxi"
@using ISII_Taxis.Form_models
@using ISII_Taxis.Data.Database
@using ISII_Taxis.Data.Objects
@inject NavigationManager navigationManager

<h1>Editar Taxi</h1>
@if (paradas == null || matriculasTaxis == null)
{
    <p>
        <em>Cargando...</em>
    </p>
}
else
{
    <EditForm Model="@_altaTaxiFormModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <p>
            <label>Matr√≠cula:</label>
            <br/>
            <InputSelect id="matricula" @bind-Value="_altaTaxiFormModel.Matricula">
                <option value="">Seleccione</option>
                @foreach (string matricula in matriculasTaxis)
                {
                    <option value="@matricula">@matricula</option>
                }
            </InputSelect>
        </p>

        <p>
            <label>Numero de plazas:</label>
            <br/>
            <InputNumber id="plazas" @bind-Value="_altaTaxiFormModel.NumeroPlazas"/>
        </p>

        <p>
            <label>E-Mail</label>
            <br/>
            <InputText id="correo" type="email" @bind-Value="_altaTaxiFormModel.Email"/>
        </p>

        <p>
            <label>Parada inicial</label>
            <br/>
            <InputSelect id="parada" @bind-Value="_altaTaxiFormModel.NumeroParada">
                <option value="">Seleccione</option>
                @foreach (Parada parada in paradas)
                {
                    <option value="@parada.id_parada">@parada.nombre_parada</option>
                }
            </InputSelect>
        </p>

        <p>
            <label>Estado</label>
            <br/>
            <InputSelect id="estado" @bind-Value="_altaTaxiFormModel.NumeroEstado">
                <option value="">Seleccione</option>
                <option value="1">Disponible</option>
                <option value="2">Ocupado</option>
                <option value="3">Desconocido</option>
            </InputSelect>
        </p>
        <p>
            <label>Fecha disponibilidad</label>
            <br/>
            <InputDate id="fechaDisponible" @bind-Value="_altaTaxiFormModel.HoraDisponible"/>
        </p>

        <button type="submit" class="btn-primary">Modificar</button>
    </EditForm>
}
@code {
    private readonly AltaTaxiForm _altaTaxiFormModel = new();
    private List<Parada>? paradas;
    private HashSet<string>? matriculasTaxis;
    
    protected override async Task OnInitializedAsync()
    {
        paradas = await SQLInteracter.ConsultaParadas();
        matriculasTaxis = new HashSet<string>((await SQLInteracter.ConsultaTaxis()).Select(x=>x.matricula));
    }

    private async Task HandleValidSubmit()
    {
        await SQLInteracter.EditarTaxi(_altaTaxiFormModel.Matricula!, _altaTaxiFormModel.NumeroParada, _altaTaxiFormModel.NumeroEstado!, _altaTaxiFormModel.Email!, _altaTaxiFormModel.NumeroPlazas!, _altaTaxiFormModel.HoraDisponible);
        navigationManager.NavigateTo("modifytaxi/modifysuccess");
        
 
    }

}