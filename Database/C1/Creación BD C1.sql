USE [master]
GO

/****** Object:  Database [ISII-TAXIS]    Script Date: 04/11/2021 20:48:02 ******/
CREATE DATABASE [ISII-TAXIS]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'ISII-TAXIS', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\ISII-TAXIS.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'ISII-TAXIS_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\ISII-TAXIS_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [ISII-TAXIS].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [ISII-TAXIS] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET ARITHABORT OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [ISII-TAXIS] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [ISII-TAXIS] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET  DISABLE_BROKER 
GO

ALTER DATABASE [ISII-TAXIS] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [ISII-TAXIS] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET RECOVERY SIMPLE 
GO

ALTER DATABASE [ISII-TAXIS] SET  MULTI_USER 
GO

ALTER DATABASE [ISII-TAXIS] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [ISII-TAXIS] SET DB_CHAINING OFF 
GO

ALTER DATABASE [ISII-TAXIS] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [ISII-TAXIS] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [ISII-TAXIS] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [ISII-TAXIS] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [ISII-TAXIS] SET QUERY_STORE = OFF
GO

ALTER DATABASE [ISII-TAXIS] SET  READ_WRITE 
GO

USE [ISII-TAXIS]
GO

CREATE TABLE paradas(
	id_parada INT IDENTITY(1,1) PRIMARY KEY,
	nombre_parada VARCHAR(50) NOT NULL,
	coord_x REAL NOT NULL,
	coord_y REAL NOT NULL
	UNIQUE(coord_x, coord_y)
	)

INSERT INTO 
	paradas(
		nombre_parada, 
		coord_x, 
		coord_y
		)
VALUES
	('Pinar de Chamartín', 40.48019347743851, -3.6668060471727975),
	('Tetuán', 40.46097936473663, -3.6981538089337227),
	('Sol', 40.41698359785564, -3.7035349844291487),
	('Campus de Montegancedo', 40.405923243300826, -3.835644388483391)
	

CREATE TABLE estados_taxi(
	id_estado TINYINT PRIMARY KEY,
	desc_estado VARCHAR(20) NOT NULL
	)

INSERT INTO 
	estados_taxi(
		id_estado, 
		desc_estado
		)
VALUES
	(1, 'Disponible'),
	(2, 'Ocupado'),
	(3, 'Desconocido')
	

CREATE TABLE taxis(
	matricula_taxi VARCHAR(10) PRIMARY KEY,
	id_parada INT NOT NULL,
	id_estado TINYINT NOT NULL,
	n_plazas TINYINT NOT NULL,
	email VARCHAR(100) NOT NULL,
	hora_disponible DATETIME NOT NULL,
	FOREIGN KEY (id_parada) REFERENCES paradas(id_parada),
	FOREIGN KEY (id_estado) REFERENCES estados_taxi(id_estado),
	)

CREATE TABLE usuarios(
	nombre_usuario VARCHAR(64) PRIMARY KEY,
	contrasena VARCHAR(64) NOT NULL,
	direccion VARCHAR(500) NOT NULL,
	email VARCHAR(100) NOT NULL,
	telefono VARCHAR(15) NOT NULL
	)

CREATE TABLE estados_solicitud(
	id_estado TINYINT PRIMARY KEY,
	desc_estado VARCHAR(20) NOT NULL
	)

CREATE TABLE solicitudes(
	id_solicitud INT IDENTITY(1,1) PRIMARY KEY,
	nombre_usuario VARCHAR(64) NOT NULL,
	matricula_taxi VARCHAR(10) NOT NULL,
	id_parada_origen INT NOT NULL,
	id_parada_destino INT NOT NULL,
	id_estado TINYINT NOT NULL,
	hora_fecha DATETIME NOT NULL
	FOREIGN KEY (nombre_usuario) REFERENCES usuarios(nombre_usuario),
	FOREIGN KEY (matricula_taxi) REFERENCES taxis(matricula_taxi),
	FOREIGN KEY (id_estado) REFERENCES estados_solicitud(id_estado),
	FOREIGN KEY (id_parada_origen) REFERENCES paradas(id_parada),
	FOREIGN KEY (id_parada_destino) REFERENCES paradas(id_parada),
	)


GO


CREATE PROCEDURE registro_usuario
	@nombre_usuario VARCHAR(64),
	@contrasena VARCHAR(64),
	@direccion VARCHAR(500),
	@email VARCHAR(100),
	@telefono VARCHAR(15)
AS
BEGIN
	IF (SELECT COUNT(*) FROM usuarios WHERE nombre_usuario = @nombre_usuario) > 0
	BEGIN
		SELECT CONVERT(BIT, 0) AS result_value
		RETURN
	END
	ELSE
	BEGIN
		INSERT INTO usuarios(nombre_usuario, contrasena, direccion, email, telefono)
		VALUES (@nombre_usuario, @contrasena, @direccion, @email, @telefono)
		SELECT CONVERT(BIT, 1) AS result_value
		RETURN
	END
END

GO

CREATE PROCEDURE login_usuario
	@nombre_usuario VARCHAR(64),
	@contrasena VARCHAR(64)
AS
BEGIN
	SELECT 
		* 
	FROM 
		usuarios 
	WHERE 
		nombre_usuario = @nombre_usuario 
		AND contrasena = @contrasena
END

GO

CREATE PROCEDURE registro_taxi
	@matricula_taxi VARCHAR(10),
	@id_parada TINYINT,
	@id_estado TINYINT,
	@email VARCHAR(100),
	@n_plazas TINYINT,
	@hora_disponible DATETIME
AS
BEGIN 
	IF (SELECT COUNT(*) FROM taxis WHERE matricula_taxi = @matricula_taxi) > 0
	BEGIN
		SELECT CONVERT(BIT, 0) AS result_value
		RETURN
	END
	ELSE
	BEGIN
	BEGIN TRY
		INSERT INTO taxis(matricula_taxi, email, id_parada, id_estado, n_plazas, hora_disponible)
		VALUES (@matricula_taxi, @email, @id_parada, @id_estado, @n_plazas, @hora_disponible)
		SELECT CONVERT(BIT, 1) AS result_value
		RETURN
	END TRY
	BEGIN CATCH
		SELECT CONVERT(BIT, 0) AS result_value
	END CATCH
	
	END
END

GO

